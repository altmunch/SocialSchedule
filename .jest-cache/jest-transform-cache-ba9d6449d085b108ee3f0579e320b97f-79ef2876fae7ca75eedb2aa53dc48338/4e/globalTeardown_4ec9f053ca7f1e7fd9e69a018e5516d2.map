{"version":3,"names":["fs","require","path","module","exports","console","log","totalTime","Date","now","global","__TEST_START_TIME__","minutes","Math","floor","seconds","toFixed","__TEST_PERFORMANCE__","perf","passedTests","failedTests","totalTests","successRate","reportPath","join","process","cwd","writeFileSync","JSON","stringify","timestamp","toISOString","totalExecutionTime","suites","error","warn","message","tempDir","existsSync","rmSync","recursive","force","__TEST_CLEANUP_FUNCTIONS__","cleanup"],"sources":["globalTeardown.js"],"sourcesContent":["// Global teardown for ClipsCommerce test suite\r\nconst fs = require('fs');\r\nconst path = require('path');\r\n\r\nmodule.exports = async () => {\r\n  console.log('üßπ Cleaning up ClipsCommerce test environment...');\r\n\r\n  // Calculate total test execution time\r\n  const totalTime = Date.now() - (global.__TEST_START_TIME__ || Date.now());\r\n  const minutes = Math.floor(totalTime / 60000);\r\n  const seconds = ((totalTime % 60000) / 1000).toFixed(2);\r\n\r\n  // Generate performance report\r\n  if (global.__TEST_PERFORMANCE__) {\r\n    const perf = global.__TEST_PERFORMANCE__;\r\n    console.log('\\nüìä Test Performance Summary:');\r\n    console.log(`‚è±Ô∏è  Total execution time: ${minutes}m ${seconds}s`);\r\n    console.log(`‚úÖ Passed tests: ${perf.passedTests}`);\r\n    console.log(`‚ùå Failed tests: ${perf.failedTests}`);\r\n    console.log(`üìà Total tests: ${perf.totalTests}`);\r\n    \r\n    if (perf.totalTests > 0) {\r\n      const successRate = ((perf.passedTests / perf.totalTests) * 100).toFixed(1);\r\n      console.log(`üéØ Success rate: ${successRate}%`);\r\n    }\r\n\r\n    // Write performance report to file\r\n    const reportPath = path.join(process.cwd(), 'test-results', 'performance-report.json');\r\n    try {\r\n      fs.writeFileSync(reportPath, JSON.stringify({\r\n        timestamp: new Date().toISOString(),\r\n        totalExecutionTime: totalTime,\r\n        totalTests: perf.totalTests,\r\n        passedTests: perf.passedTests,\r\n        failedTests: perf.failedTests,\r\n        successRate: perf.totalTests > 0 ? (perf.passedTests / perf.totalTests) * 100 : 0,\r\n        suites: perf.suites,\r\n      }, null, 2));\r\n    } catch (error) {\r\n      console.warn('‚ö†Ô∏è  Could not write performance report:', error.message);\r\n    }\r\n  }\r\n\r\n  // Clean up temporary test files\r\n  const tempDir = path.join(process.cwd(), 'testing', 'temp');\r\n  if (fs.existsSync(tempDir)) {\r\n    try {\r\n      fs.rmSync(tempDir, { recursive: true, force: true });\r\n    } catch (error) {\r\n      console.warn('‚ö†Ô∏è  Could not clean up temp directory:', error.message);\r\n    }\r\n  }\r\n\r\n  // Clean up any test processes or connections\r\n  if (global.__TEST_CLEANUP_FUNCTIONS__) {\r\n    for (const cleanup of global.__TEST_CLEANUP_FUNCTIONS__) {\r\n      try {\r\n        await cleanup();\r\n      } catch (error) {\r\n        console.warn('‚ö†Ô∏è  Cleanup function failed:', error.message);\r\n      }\r\n    }\r\n  }\r\n\r\n  console.log('‚úÖ Test environment cleanup complete');\r\n}; "],"mappings":"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","ignoreList":[]}