8168f2f2856a06cc26fc91cc37edfe13
"use strict";
'use client';
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = PricingSection;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const framer_motion_1 = require("framer-motion");
const lucide_react_1 = require("lucide-react");
const link_1 = __importDefault(require("next/link"));
function PricingSection({ onGetStarted }) {
    const [isAnnual, setIsAnnual] = (0, react_1.useState)(true);
    // Calculate monthly prices (25% more than annual price divided by 12)
    const calculateMonthly = (annualPrice) => {
        return Math.round(annualPrice / 12 * 1.25);
    };
    const plans = [
        {
            name: 'Lite Plan',
            subtitle: '$20/month',
            annualPrice: 240, // $20 * 12
            monthlyPrice: 20,
            features: [
                'Viral Blitz Cycle Framework (15 uses)',
                'Idea Generator Framework (15 uses)',
                '15 autoposts/month',
                'Basic analytics (no e-commerce)',
            ],
            highlighted: false,
            stripeLinkEnv: 'NEXT_PUBLIC_STRIPE_LITE_LINK',
        },
        {
            name: 'Pro Plan',
            subtitle: '$70/month',
            annualPrice: 840, // $70 * 12
            monthlyPrice: 70,
            features: [
                'Viral Blitz Cycle Framework (unlimited)',
                'Idea Generator Framework (unlimited)',
                'Unlimited posts',
                'Multiple account sets',
                'E-commerce integration',
                'Advanced analytics & reporting',
            ],
            highlighted: true,
            stripeLinkEnv: 'NEXT_PUBLIC_STRIPE_PRO_LINK',
        },
        {
            name: 'Team Plan',
            subtitle: '$500/month',
            annualPrice: 6000, // $500 * 12
            monthlyPrice: 500,
            features: [
                'Everything in Pro',
                'Team dashboard access',
                'Manage unlimited accounts',
                'Brand Voice AI (for consistency)',
                'Team collaboration mode',
                'Priority support',
            ],
            highlighted: false,
            stripeLinkEnv: 'NEXT_PUBLIC_STRIPE_TEAM_LINK',
        }
    ];
    const getButtonLink = (plan) => {
        if (plan.name === 'Lite Plan') {
            if (isAnnual) {
                return process.env.NEXT_PUBLIC_STRIPE_LITE_YEARLY_LINK || "/dashboard";
            }
            return process.env.NEXT_PUBLIC_STRIPE_LITE_MONTHLY_LINK || "/dashboard";
        }
        if (plan.name === 'Pro Plan') {
            if (isAnnual) {
                return process.env.NEXT_PUBLIC_STRIPE_PRO_YEARLY_LINK || "/dashboard";
            }
            else {
                return process.env.NEXT_PUBLIC_STRIPE_PRO_MONTHLY_LINK || "/dashboard";
            }
        }
        if (plan.name === 'Team Plan') {
            if (isAnnual) {
                return process.env.NEXT_PUBLIC_STRIPE_TEAM_YEARLY_LINK || "/dashboard";
            }
            else {
                return process.env.NEXT_PUBLIC_STRIPE_TEAM_MONTHLY_LINK || "/dashboard";
            }
        }
        return "/dashboard";
    };
    const handlePlanClick = (plan) => {
        const stripeLink = getButtonLink(plan);
        // For team plans, we need to handle post-payment redirect to team dashboard
        if (plan.name === 'Team Plan' && stripeLink.includes('stripe')) {
            // Store the intended redirect in localStorage for post-payment handling - only on client side
            if (typeof window !== 'undefined') {
                localStorage.setItem('post_payment_redirect', '/team-dashboard');
            }
        }
        if (stripeLink.includes('stripe')) {
            window.open(stripeLink, '_blank');
        }
        else {
            window.location.href = stripeLink;
        }
    };
    return ((0, jsx_runtime_1.jsx)("section", { className: "py-16 md:py-24 bg-gradient-to-b from-black to-[#0A0A0A] text-white", children: (0, jsx_runtime_1.jsxs)("div", { className: "max-w-7xl mx-auto px-6 sm:px-12 lg:px-16", children: [(0, jsx_runtime_1.jsxs)(framer_motion_1.motion.div, { className: "text-center mb-16", initial: { opacity: 0, y: 20 }, whileInView: { opacity: 1, y: 0 }, viewport: { once: true }, transition: { duration: 0.6 }, children: [(0, jsx_runtime_1.jsxs)("h2", { className: "text-4xl md:text-6xl font-bold mb-6", children: ["Choose Your ", (0, jsx_runtime_1.jsx)("span", { className: "text-[#5afcc0]", children: "Revenue" }), " Plan"] }), (0, jsx_runtime_1.jsx)("p", { className: "text-xl text-white/80 max-w-3xl mx-auto", children: "Every plan is designed to pay for itself within the first month through increased sales and conversions." })] }), (0, jsx_runtime_1.jsxs)("div", { className: "text-center mb-16", children: [(0, jsx_runtime_1.jsx)(framer_motion_1.motion.span, { className: "inline-block text-sm font-semibold text-[#5afcc0] uppercase tracking-wider mb-3", initial: { opacity: 0, y: 20 }, whileInView: { opacity: 1, y: 0 }, viewport: { once: true }, transition: { duration: 0.6 }, children: "Simple, Transparent Pricing" }), (0, jsx_runtime_1.jsxs)(framer_motion_1.motion.h2, { className: "text-3xl md:text-4xl font-bold text-white mb-6", initial: { opacity: 0, y: 20 }, whileInView: { opacity: 1, y: 0 }, viewport: { once: true }, transition: { duration: 0.6, delay: 0.1 }, children: ["Scale Your Content and ", (0, jsx_runtime_1.jsx)("span", { className: "text-[#8D5AFF]", children: "Maximize Sales" })] }), (0, jsx_runtime_1.jsx)(framer_motion_1.motion.p, { className: "text-xl text-white/80 max-w-3xl mx-auto mb-10", initial: { opacity: 0, y: 20 }, whileInView: { opacity: 1, y: 0 }, viewport: { once: true }, transition: { duration: 0.6, delay: 0.1 }, children: "Select the plan that best fits your needs. All plans include our core AI-powered features." }), (0, jsx_runtime_1.jsxs)(framer_motion_1.motion.div, { className: "inline-flex items-center bg-black/30 p-1 rounded-full border border-white/10 mb-12 backdrop-blur-sm", initial: { opacity: 0, y: 20 }, whileInView: { opacity: 1, y: 0 }, viewport: { once: true }, transition: { duration: 0.6, delay: 0.2 }, children: [(0, jsx_runtime_1.jsxs)("button", { className: `px-6 py-2 rounded-full text-sm font-medium transition-all ${isAnnual ? 'bg-[#8D5AFF] text-white shadow-lg' : 'text-white/60 hover:text-white'}`, onClick: () => setIsAnnual(true), children: ["Annual", (0, jsx_runtime_1.jsx)("span", { className: "ml-1 text-xs bg-[#5afcc0] text-black px-2 py-0.5 rounded-full", children: "Save 20%" })] }), (0, jsx_runtime_1.jsx)("button", { className: `px-6 py-2 rounded-full text-sm font-medium transition-all ${!isAnnual ? 'bg-[#8D5AFF] text-white shadow-lg' : 'text-white/60 hover:text-white'}`, onClick: () => setIsAnnual(false), children: "Monthly" })] }), (0, jsx_runtime_1.jsx)("div", { className: "grid md:grid-cols-3 gap-6 xl:gap-10", children: plans.map((plan, index) => ((0, jsx_runtime_1.jsxs)(framer_motion_1.motion.div, { className: `relative rounded-2xl overflow-hidden backdrop-blur-sm ${plan.highlighted ? 'border-2 border-[#8D5AFF]/50 bg-gradient-to-br from-black to-[#1A1A1A]' : 'border border-white/10 bg-black/40'}`, initial: { opacity: 0, y: 30 }, whileInView: { opacity: 1, y: 0 }, viewport: { once: true }, transition: { duration: 0.5, delay: 0.1 + (index * 0.1) }, children: [plan.highlighted && ((0, jsx_runtime_1.jsx)("div", { className: "bg-gradient-to-r from-[#8D5AFF] to-[#5afcc0] text-white text-center py-3 font-semibold text-sm tracking-wider", children: "MOST POPULAR" })), (0, jsx_runtime_1.jsxs)("div", { className: "p-8 relative", children: [plan.highlighted && ((0, jsx_runtime_1.jsx)("div", { className: "absolute -top-20 -right-20 w-64 h-64 bg-[#8D5AFF]/20 rounded-full filter blur-3xl -z-10" })), (0, jsx_runtime_1.jsx)("h3", { className: "text-2xl font-bold text-white mb-2", children: plan.name }), (0, jsx_runtime_1.jsx)("p", { className: "text-white/60 mb-6 min-h-[40px]", children: plan.subtitle }), (0, jsx_runtime_1.jsxs)("div", { className: "flex items-baseline mb-6", children: [(0, jsx_runtime_1.jsxs)("span", { className: "text-4xl font-bold text-white", children: ["$", isAnnual ? plan.annualPrice : plan.monthlyPrice] }), (0, jsx_runtime_1.jsx)("span", { className: "text-white/60 ml-2", children: isAnnual ? '/year' : '/month' })] }), (0, jsx_runtime_1.jsx)("div", { className: "bg-[#5afcc0]/10 rounded-lg p-4 mb-6 border border-[#5afcc0]/20", children: (0, jsx_runtime_1.jsxs)("div", { className: "flex items-start", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Sparkles, { className: "h-5 w-5 text-[#5afcc0] mr-2 mt-0.5 flex-shrink-0" }), (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("p", { className: "text-[#5afcc0] font-medium", children: "Limited Time Bonuses" }), (0, jsx_runtime_1.jsx)("p", { className: "text-sm text-white/70", children: "Template Generator & Hook Creator included ($899 value)" })] })] }) }), (0, jsx_runtime_1.jsx)("button", { onClick: () => handlePlanClick(plan), className: `w-full group relative py-3 px-6 rounded-lg font-semibold text-white transition-all duration-300 overflow-hidden mb-8 ${plan.highlighted
                                                    ? 'bg-gradient-to-r from-[#8D5AFF] to-[#5afcc0] hover:shadow-lg hover:shadow-[#8D5AFF]/20'
                                                    : 'bg-[#8D5AFF] hover:bg-[#8D5AFF]/90'}`, children: (0, jsx_runtime_1.jsxs)(link_1.default, { href: "/dashboard", passHref: true, children: [(0, jsx_runtime_1.jsx)("span", { className: "relative z-10", children: plan.highlighted ? 'Get Started' : 'Select Plan' }), (0, jsx_runtime_1.jsx)(lucide_react_1.ChevronRight, { className: "ml-2 h-5 w-5 inline transition-transform group-hover:translate-x-1" })] }) }), (0, jsx_runtime_1.jsxs)("div", { className: "flex items-center justify-center text-sm text-white/60 mb-6", children: [(0, jsx_runtime_1.jsx)(lucide_react_1.Shield, { className: "h-4 w-4 mr-2 text-[#5afcc0]" }), (0, jsx_runtime_1.jsx)("span", { children: "10-day results guarantee" })] }), (0, jsx_runtime_1.jsxs)("div", { className: "space-y-3", children: [(0, jsx_runtime_1.jsx)("p", { className: "text-sm font-medium text-white border-b border-white/10 pb-2 mb-3", children: "FEATURES" }), plan.features.map((feature, idx) => ((0, jsx_runtime_1.jsxs)(framer_motion_1.motion.div, { className: "flex items-start", initial: { opacity: 0, x: -10 }, whileInView: { opacity: 1, x: 0 }, viewport: { once: true }, transition: { duration: 0.3, delay: 0.1 + (idx * 0.05) }, children: [(0, jsx_runtime_1.jsx)("div", { className: "w-5 h-5 rounded-full bg-[#5afcc0]/10 flex items-center justify-center flex-shrink-0 mr-3 mt-0.5", children: (0, jsx_runtime_1.jsx)(lucide_react_1.Check, { className: "h-3 w-3 text-[#5afcc0]" }) }), (0, jsx_runtime_1.jsx)("span", { className: "text-white/80 text-sm", children: feature })] }, idx)))] })] }), plan.highlighted && ((0, jsx_runtime_1.jsx)("div", { className: "absolute -bottom-20 -left-20 w-64 h-64 bg-[#5afcc0]/10 rounded-full filter blur-3xl -z-10" }))] }, plan.name))) })] })] }) }));
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,